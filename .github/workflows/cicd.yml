name: Build and Deploy Management Landing Zone Resources
run-name: ${{ github.event.repository.updated_at}}_${{ github.run_number }}_${{ github.ref }}
on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - dev
      - main
env:
  ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
  TF_PLAN_FILE: tfplan
  TF_LANDING_ZONE: 'management'
  TF_CONFIGURATIONS: 'network'
  TF_ROOT_PATH: ${{ github.workspace }}/terraform/management
  #ENVIRONMENT: ${{ fromJSON('["dev", "prd"]')[github.ref == 'refs/heads/main'] }}
  ENVIRONMENT: mgnt

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - id: set-matrix
        shell: pwsh
        run: |
          $matrix = @()
          $configurations = "$($env:TF_CONFIGURATIONS)" -split ','
          foreach($configuration in $configurations){
            $matrix += "{`"configuration`":`"$configuration`"}"
          }
          Write-Host("::set-output name=matrix::{`"include`":[$($matrix -join ',')]}")
  build:
    runs-on: ubuntu-latest
    needs: prepare
    strategy:
      matrix: ${{ fromJSON(needs.prepare.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v3
      - name: Build Terraform Configuration (Plan)
        uses: piroinno/stock-data-infra-tf-automation/build/@init
        with:
          landingzonenamerootpath: ${{ env.TF_ROOT_PATH }}
          configurationfolder: ${{ matrix.configuration }}
          environment: ${{env.ENVIRONMENT }}
          terraformphase: "plan"
          automatedrun: "true"
          terraformconfigplanfilepath: ${{ github.workspace }}/terraform
          terraformconfigplanfile: ${{ env.TF_PLAN_FILE }}
          terraformworkingpath: ${{ github.workspace }}

  deploy:
    runs-on: ubuntu-latest
    needs: [build, prepare]
    strategy:
      matrix: ${{ fromJSON(needs.prepare.outputs.matrix) }}
    steps:
      - name: Deploy Terraform  (Apply)
        uses: piroinno/stock-data-infra-tf-automation/build@init
        with:
          landingzonenamerootpath: ${{ env.TF_ROOT_PATH }}
          configurationfolder: ${{ matrix.configuration }}
          environment: ${{env.ENVIRONMENT }}
          terraformphase: "apply"
          automatedrun: "true"
          terraformconfigplanfilepath: ${{ github.workspace }}/terraform
          terraformconfigplanfile: ${{ env.TF_PLAN_FILE }}
          terraformworkingpath: ${{ github.workspace }}