name: Build and Deploy Applications
run-name: ${{ github.event.repository.updated_at}}_${{ github.run_number }}_${{ github.ref }}
on:
  workflow_dispatch:
    branches:
      - '**'
      # - dev
      # - main
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - dev
      - main
env:
  ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
  ARM_ACR_CLIENT_ID: ${{ secrets.ARM_ACR_CLIENT_ID }}
  ARM_ACR_CLIENT_SECRET: ${{ secrets.ARM_ACR_CLIENT_SECRET }}
  ARM_ACR_SUBSCRIPTION_ID: ${{ secrets.ARM_ACR_SUBSCRIPTION_ID }}
  APP_LANDING_ZONE: 'management'
  APP_LANDING_ZONE_ROOT_PATH: ${{ github.workspace }}/application/management
  APP_NAMES: 'runneragent'
  APP_AUTO_WORKING_FOLDER: "./"
  APP_AUTO_WORKING_PATH: ${{ github.workspace }}/application
  #ENVIRONMENT: ${{ fromJSON('["dev", "prd"]')[github.ref == 'refs/heads/main'] }}
  ENVIRONMENT: mgnt

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - id: set-matrix
        shell: pwsh
        run: |
          $matrix = @()
          $apps = "$($env:APP_NAMES)" -split ','
          foreach($app in $apps){
            $matrix += "{`"app`":`"$app`"}"
          }
          Write-Host("::set-output name=matrix::{`"include`":[$($matrix -join ',')]}")
          
  build:
    if: ${{ github.event_name == 'pull_request' || github.event_name == 'push' || github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-latest
    needs: prepare
    strategy:
      matrix: ${{ fromJSON(needs.prepare.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v3
      - name: Build docker image
        uses: piroinno/stock-data-app-automation/build/docker/@init
        with:
          appfolder: ${{ matrix.app }}
          applicationbuildphase: "build"
          automatedrun: "true"
          isbuilddryrun: "true"
          applicationbuildtags: "${{ env.ENVIRONMENT }},latest"
          applicationbuildimagename: "${{ matrix.app }}"
          applicationbuildimageregistry: "${{ secrets.ACR_LOGIN_SERVER }}"
          applicationbuilddockerfileargs: "POWERSHELL_VERSION=7.3.3,TERRAFORM_VERSION=1.4.2,RUNNER_VERSION=2.303.0,ORGANISATION=${{ github.repository_owner }},REPOSITORY=${{ github.event.repository.name }}"
          applicationbuilddefaulttag: "${{ github.sha }}"
          applicationbuildimagerepository: "${{ env.APP_LANDING_ZONE}}/application"
          applicationbuilddockerfile: "Dockerfile"